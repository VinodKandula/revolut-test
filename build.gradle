plugins {
    id 'java'
    id 'jacoco'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'org.flywaydb.flyway' version '5.2.4'

    id 'com.github.kt3k.coveralls' version '2.8.4'

    id 'org.sonarqube' version '2.7'
}

group 'com.jullierme'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'com.jullierme.revolut.Application'

ext {
    log4j2Version = '2.12.1'
    jettyVersion = '9.4.19.v20190610'
    jerseyVersion = '2.29'
    junitVersion = '5.5.1'
    junitRunnerVersion = '1.5.1'
    jacksonDatabindVersion = '2.10.0.pr1'
    mockitoVersion = '3.0.0'
    h2Version = '1.4.199'
    commonsConfigurationVersion = '2.5'
    commonsBeanutilsVersion = '1.9.3'
    flywayVersion = '6.0.0-beta2'
    restAssuredVersion = '4.0.0'
    tomcatJdbcVersion = '9.0.22'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.eclipse.jetty:jetty-server:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-servlet:${jettyVersion}"

    compile "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}"
    compile "org.glassfish.jersey.containers:jersey-container-jetty-http:${jerseyVersion}"
    compile "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}"

    /*To return json instead of plain text*/
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"

    compile "com.h2database:h2:${h2Version}"

    compile "org.apache.commons:commons-configuration2:${commonsConfigurationVersion}"
    compile "commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}"

    compile "org.flywaydb:flyway-core:${flywayVersion}"

    compile "org.apache.tomcat:tomcat-jdbc:${tomcatJdbcVersion}"

    testCompile "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-params:${junitVersion}"

    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.mockito:mockito-junit-jupiter:${mockitoVersion}"

    testCompile "io.rest-assured:rest-assured:${restAssuredVersion}"


}

jar {
    enabled = true
    manifest {
        attributes "Implementation-Title": "Revolut Test - Jullierme Barros",
                "Implementation-Version": version
    }
}

test {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.projectKey", revolut-test
    }
}

coveralls {
    jacocoReportPath 'build/reports/jacoco/test/jacocoTestReport.xml'
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        csv.enabled = false
        html.enabled = true
    }
}

test.finalizedBy jacocoTestReport